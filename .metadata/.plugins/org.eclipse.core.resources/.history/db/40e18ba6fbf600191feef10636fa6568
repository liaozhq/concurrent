package com.qcloud.concurrent.forkjoin;

import java.io.File;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.RecursiveAction;

public class FileSearch {

	public static void main(String[] args) {
		ForkJoinPool pool = new ForkJoinPool();
		SearchTask task = new SearchTask("D:\\", "BUILDING.txt");
		pool.submit(task);
	    pool.shutdown();
	}

	public static class SearchTask extends RecursiveAction {

		private File f;

		private String name;

		public SearchTask(File f, String name) {
			this.f = f;
			System.out.println(this.f.listFiles().length);
			this.name = name;
		}

		@Override
		protected void compute() {
			for (File file : this.f.listFiles()) {
				System.out.println(file.getName());
				if (file.isDirectory()) {
					invokeAll(new SearchTask(file, this.name));
				
				} else {
					if(name.equals(file.getName())) {
						System.out.println(file.getPath());
					}
				}
			}
		}
	}
}
